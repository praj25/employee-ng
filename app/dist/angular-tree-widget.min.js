/*
	@license Angular TreeWidget version 0.0.1
	ⓒ 2016 Alex Suleap https://github.com/AlexSuleap/agular-tree-widget
	License: MIT
*/
!function (e) { "use strict"; e.module("TreeWidget", ["ngAnimate", "RecursionHelper"]).directive("tree", function () { return { restrict: "E", scope: { nodes: "=", options: "=" }, template: "<treenode nodes='nodes' tree='nodelist' options='options'></treenode>", compile: function (e, n, o) { return { pre: function (e) { function n(o) { if (void 0 != o && o.length > 0) for (var i = 0; i < o.length; i++) { var d = o[i]; void 0 === d.id && (d.id = "tree-node-" + i), void 0 === d.open && void 0 != d.children && (d.open = !0), e.nodelist.push(d), n(d.children) } } e.nodelist = [], e.options = e.options || (e.options = { showIcon: !0, expandOnClick: !1, multipleSelect: !1 }), e.$watch(function () { n(e.nodes) }) } } } } }).directive("treenode", ["RecursionHelper", function (n) { return { restrict: "E", scope: { nodes: "=", tree: "=", options: "=" }, template: '<ul><li ng-repeat="node in nodes" class="node"><i class="tree-node-ico pointer" ng-class="{\'tree-node-expanded\': node.open,\'tree-node-collapsed\':!node.open && node.children}" ng-click="toggleNode(node)"></i><span class="node-title pointer" ng-click="selectNode(node)" ng-class="{\'disabled\':node.disabled, selected: node.selected&& !node.disabled}"><i class="tree-node-ico" ng-if="options.showIcon" ng-class="{\'tree-node-image\':node.children, \'tree-node-leaf\':!node.children}" ng-style="node.image && {\'background-image\':\'url({{node.image}})\'}"></i>{{node.name}}</span><treenode ng-if="node.children" nodes=\'node.children\' tree="tree" options="options" ng-show="node.open" id="{{node.id}}"></treenode></li></ul>', compile: function (o) { return n.compile(o, function (n, o, i, d, t) { n.selectNode = function (o) { o.disabled || (n.options.multipleSelect ? o.selected = !o.selected : (o.selected = !0, e.forEach(n.tree, function (e) { o != e && (e.selected = !1) })), n.$emit("selection-changed", o), n.options.expandOnClick && void 0 != o.children && (o.open = !o.open)) }, n.toggleNode = function (e) { void 0 != e.children && (e.open = !e.open) } }) } } }]) }(angular);